# -*- coding: utf-8 -*-
"""normalize 16S.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gk60AGH4BrO4-gBCOi3PDpjUREqHk8QO
"""

# Script: normalize 16S.py
# Description: Reads a user-defined CSV abundance matrix and a fixed 16S copy number file,
# normalizes the matrix, and exports it in MicrobiomeAnalyst-compatible format.

import pandas as pd
import numpy as np

# === Read the original CSV file  ===
with open("prebiotic_data_file.csv", 'r', encoding='utf-8') as f:
    lines = f.readlines()

# Extract #NAME and #CLASS
name_line = lines[0].strip().split(",")
class_line = lines[1].strip().split(",")
name_line[0] = "Taxon"
class_line[0] = "Group"

# Header and data
header = name_line
data = [line.strip().split(",") for line in lines[2:]]
df = pd.DataFrame(data, columns=header)

# Transform columns to float
sample_cols = header[1:]
df[sample_cols] = df[sample_cols].apply(pd.to_numeric, errors='coerce')

# === Normalize using 16S copy numbers ===
copy_df = pd.read_csv("16S_copy_numbers.csv")
copy_dict = dict(zip(copy_df['Taxon'], copy_df['CopyNumber']))

def find_copy_number(taxon_string):
    taxa = taxon_string.split(";")[::-1]
    for t in taxa:
        if t.strip() in copy_dict:
            return copy_dict[t.strip()]
    return np.nan

df["CopyNumber"] = df["Taxon"].apply(find_copy_number)
corrected = df[sample_cols].div(df["CopyNumber"], axis=0)

# Export normalized matrix
final_df = pd.concat([df[["Taxon"]], corrected], axis=1)
final_df.to_csv("matrix_normalized_microbiomeanalyst.csv", index=False)

# Remove "Taxon" from the header and add #NAME and #CLASS
name_line_out = name_line[1:]
class_line_out = class_line[1:]

# Manually write two lines + matrix without header
with open("matrix_normalized_microbiomeanalyst.csv", "w", encoding="utf-8") as f:
    f.write("#NAME," + ",".join(name_line_out) + "\n")
    f.write("#CLASS," + ",".join(class_line_out) + "\n")
    final_df.to_csv(f, index=False, header=False)

print("âœ… Normalized matrix saved as 'matrix_normalized_microbiomeanalyst.csv'")
